
services:
  db:
    build:
      context: .
      dockerfile: Dockerfile_postgres_extension
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - tracking_network
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"   # HTTP 接口
      - "9000:9000"   # TCP 接口（Client 使用）
      - "9009:9009"   # 內部管理用
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      CLICKHOUSE_DB: tracking_db
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: secret
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    restart: unless-stopped
    networks:
      - tracking_network
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - tracking_network
  kafka:
    image: bitnami/kafka:3.5.1-debian-11-r75
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    ports:
      - "9092:9092"  # internal communication between Kafka brokers
      - "9094:9094"  # external communication
      - "9997:9997"
    restart: unless-stopped
    networks:
      - tracking_network
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry0:8085
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
    ports:
      - 8080:8080
    depends_on:
      - kafka
    restart: unless-stopped
  nifi:
    image: apache/nifi:2.3.0
    ports:
      - "8443:8443"
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: efe530b7-5f5e-4a3e-b5df-bd9a9e84d7f6
      SINGLE_USER_CREDENTIALS_PASSWORD: 6lYDgPq4fc3jY8raFDhzSYZX33sYFZJf
    volumes:
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
      - nifi_database:/opt/nifi/nifi-current/database_repository
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_logs:/opt/nifi/nifi-current/logs
    restart: unless-stopped
    networks:
      - tracking_network
volumes:
  postgres_data:
    driver: local
  clickhouse_data:
    driver: local
  nifi_content:
    driver: local
  nifi_provenance:
    driver: local
  nifi_flowfile:
    driver: local
  nifi_database:
    driver: local
  nifi_conf:
    driver: local
  nifi_logs:
    driver: local

networks:
  tracking_network:
    driver: bridge